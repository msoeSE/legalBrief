<Project Sdk="Microsoft.NET.Sdk.Web">

  <PropertyGroup>
    <TargetFramework>netcoreapp2.0</TargetFramework>
    <TypeScriptCompileBlocked>true</TypeScriptCompileBlocked>
    <TypeScriptToolsVersion>Latest</TypeScriptToolsVersion>
    <IsPackable>false</IsPackable>
    <SpaRoot>ClientApp\</SpaRoot>
    <DefaultItemExcludes>$(DefaultItemExcludes);$(SpaRoot)node_modules\**</DefaultItemExcludes>

    <!-- Set this to true if you enable server-side prerendering -->
    <DockerComposeProjectPath>..\docker-compose.dcproj</DockerComposeProjectPath>
    <BuildServerSideRenderer>false</BuildServerSideRenderer>
    <UserSecretsId>5ebedfaf-3716-43c6-b64c-fd09ccbb326d</UserSecretsId>
    <DockerComposeProjectPath>..\docker-compose.dcproj</DockerComposeProjectPath>
    <PreserveCompilationContext>true</PreserveCompilationContext>
    <MvcRazorCompileOnPublish>false</MvcRazorCompileOnPublish>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="AutoMapper" Version="6.2.2" />
    <PackageReference Include="AutoMapper.Extensions.Microsoft.DependencyInjection" Version="3.2.0" />
    <PackageReference Include="FluentEmail.Razor" Version="2.4.0" />
    <PackageReference Include="FluentEmail.Smtp" Version="2.4.1" />
    <PackageReference Include="Microsoft.AspNetCore.All" Version="2.0.5" />
    <PackageReference Include="Microsoft.AspNetCore.SpaServices.Extensions" Version="2.0.0-rc1-final" />
    <PackageReference Include="Npgsql.EntityFrameworkCore.PostgreSQL" Version="2.0.1" />
    <PackageReference Include="OpenXmlPowerTools" Version="1.0.0" />
    <PackageReference Include="AspNet.Security.OAuth.Validation" Version="2.0.0-rc3-0300" />
    <PackageReference Include="OpenIddict" Version="2.0.0-rc3-0964" />
    <PackageReference Include="OpenIddict.EntityFrameworkCore" Version="2.0.0-rc3-0964" />
    <PackageReference Include="OpenIddict.Mvc" Version="2.0.0-rc3-0964" />
    <PackageReference Include="Serilog.AspNetCore" Version="2.1.1" />
    <PackageReference Include="Serilog.Sinks.Console" Version="3.1.1" />
    <PackageReference Include="Serilog.Sinks.File" Version="4.0.0" />
  </ItemGroup>

  <ItemGroup>
    <DotNetCliToolReference Include="Microsoft.VisualStudio.Web.CodeGeneration.Tools" Version="2.0.1" />
  </ItemGroup>

  <ItemGroup>
    <!-- Don't publish the SPA source files, but do show them in the project files list -->
    <Content Remove="$(SpaRoot)**" />
    <None Include="$(SpaRoot)**" Exclude="$(SpaRoot)node_modules\**" />
  </ItemGroup>

  <ItemGroup>
    <None Remove="ClientApp\src\app\account\account-routing.module.ts" />
    <None Remove="ClientApp\src\app\account\account.component.ts" />
    <None Remove="ClientApp\src\app\account\account.module.ts" />
    <None Remove="ClientApp\src\app\account\confirmation\ConfirmationRequest.ts" />
    <None Remove="ClientApp\src\app\account\shared\account.service.ts" />
    <None Remove="ClientApp\src\app\app-routing.module.ts" />
    <None Remove="ClientApp\src\app\auth.config.ts" />
    <None Remove="ClientApp\src\app\auth.guard.ts" />
    <None Remove="ClientApp\src\app\briefs\briefs-routing.module.ts" />
    <None Remove="ClientApp\src\app\briefs\briefs.component.ts" />
    <None Remove="ClientApp\src\app\briefs\briefs.module.ts" />
    <None Remove="ClientApp\src\app\briefs\initial\initial-routing.module.ts" />
    <None Remove="ClientApp\src\app\briefs\initial\initial.component.ts" />
    <None Remove="ClientApp\src\app\briefs\initial\initial.module.ts" />
    <None Remove="ClientApp\src\app\briefs\reply\reply-routing.module.ts" />
    <None Remove="ClientApp\src\app\briefs\reply\reply.component.ts" />
    <None Remove="ClientApp\src\app\briefs\reply\reply.module.ts" />
    <None Remove="ClientApp\src\app\briefs\response\response-routing.module.ts" />
    <None Remove="ClientApp\src\app\briefs\response\response.component.ts" />
    <None Remove="ClientApp\src\app\briefs\response\response.module.ts" />
    <None Remove="ClientApp\src\app\core\core.module.ts" />
    <None Remove="ClientApp\src\app\core\header\header.component.ts" />
    <None Remove="ClientApp\src\app\core\module-import-guard.ts" />
    <None Remove="ClientApp\src\app\legal-resources\legal-resources-routing.module.ts" />
    <None Remove="ClientApp\src\app\legal-resources\legal-resources.module.ts" />
    <None Remove="ClientApp\src\app\shared\shared.module.ts" />
    <None Remove="initialBriefTemplateLawyer.docx" />
    <None Remove="initialBriefTemplateUser.docx" />
    <None Remove="replyBriefTemplateLawyer.docx" />
    <None Remove="replyBriefTemplateUser.docx" />
    <None Remove="responseBriefTemplateLawyer.docx" />
    <None Remove="responseBriefTemplateUser.docx" />
  </ItemGroup>

  <ItemGroup>
    <Content Include="initialBriefTemplateLawyer.docx">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Content>
    <Content Include="initialBriefTemplateUser.docx">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Content>
    <Content Include="replyBriefTemplateLawyer.docx">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Content>
    <Content Include="replyBriefTemplateUser.docx">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Content>
    <Content Include="responseBriefTemplateLawyer.docx">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Content>
    <Content Include="responseBriefTemplateUser.docx">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Content>
  </ItemGroup>

  <ItemGroup>
    <TypeScriptCompile Include="ClientApp\src\app\account\account-routing.module.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\account\account.component.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\account\account.module.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\account\shared\ConfirmationRequest.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\account\shared\account.service.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\app-routing.module.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\auth.config.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\briefs\briefs-routing.module.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\briefs\briefs.component.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\briefs\briefs.module.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\briefs\initial\initial.component.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\briefs\initial\initial-routing.module.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\briefs\initial\initial.module.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\briefs\reply\reply-routing.module.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\briefs\reply\reply.component.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\briefs\reply\reply.module.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\briefs\response\response-routing.module.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\briefs\response\response.component.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\briefs\response\response.module.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\core\auth-guard.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\account\confirmation\confirmation.component.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\core\core.module.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\core\header\header.component.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\core\module-import-guard.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\core\warning-guard.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\legal-resources\legal-resources-routing.module.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\legal-resources\legal-resources.component.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\core\auth.service.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\legal-resources\legal-resources.module.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\shared\shared.module.ts" />
  </ItemGroup>

  <Target Name="DebugEnsureNodeEnv" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug' And !Exists('$(SpaRoot)node_modules') ">
    <!-- Ensure Node.js is installed -->
    <Exec Command="node --version" ContinueOnError="true">
      <Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
    </Exec>
    <Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE." />
    <Message Importance="high" Text="Restoring dependencies using 'npm'. This may take several minutes..." />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
  </Target>

  <Target Name="PublishRunWebpack" AfterTargets="ComputeFilesToPublish">
    <!-- As part of publishing, ensure the JS resources are freshly built in production mode -->
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm run build -- --prod" />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm run build:ssr -- --prod" Condition=" '$(BuildServerSideRenderer)' == 'true' " />

    <!-- Include the newly-built files in the publish output -->
    <ItemGroup>
      <DistFiles Include="$(SpaRoot)dist\**; $(SpaRoot)dist-server\**" />
      <DistFiles Include="$(SpaRoot)node_modules\**" Condition="'$(BuildServerSideRenderer)' == 'true'" />
      <ResolvedFileToPublish Include="@(DistFiles->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
        <RelativePath>%(DistFiles.Identity)</RelativePath>
        <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
      </ResolvedFileToPublish>
    </ItemGroup>
  </Target>


  <ItemGroup>
    <DotNetCliToolReference Include="Amazon.ECS.Tools" Version="1.1.0" />
  </ItemGroup>

  <ItemGroup>
    <DotNetCliToolReference Include="Amazon.ElasticBeanstalk.Tools" Version="1.1.0" />
  </ItemGroup>

  <ItemGroup>
    <None Update="rds-combined-ca-bundle.pfx">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </None>
  </ItemGroup>
</Project>


